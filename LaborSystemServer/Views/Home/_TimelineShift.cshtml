@using LaborSystemServer.Service
@{
    ViewData["Title"] = "Shift Work Configuration Timeline";
    
    var shiftTimelines = (List<ShiftTimelineDto>)ViewBag.ShiftTimelines;
    var shiftsWithFriday = shiftTimelines.Where(s => s.HasFriday).ToList();
    var shiftsWithoutFriday = shiftTimelines.Where(s => !s.HasFriday).ToList();
}

<div class="container">
    <h2 class="mb-4" style="color: #1a202c; font-weight: 600;">Shift Work Configuration Timeline</h2>
    
    @foreach(var shift in shiftsWithFriday)
    {
        <div class="shift-card @shift.ClassName">
            <div class="shift-header">
                <div class="shift-icon">
                    <i class="@shift.Icon"></i>
                </div>
                <div class="shift-info">
                    <h5>@shift.Title</h5>
                    <div class="time-range">@shift.StartTime.ToString(@"hh\:mm") - @shift.EndTime.ToString(@"hh\:mm")</div>
                </div>
            </div>
            
            <div class="timeline-grid two-columns">
                <div class="day-section">
                    <div class="day-label">
                        <span class="day-name">Normal Days</span>
                        <span class="day-subtitle">Mon - Thu</span>
                        <span class="capacity-badge-inline">@shift.NormalWorkMinutes min</span>
                    </div>
                    <div class="timeline-container">
                        <div class="timeline-track">
                            @{
                                var normalBlockCount = shift.NormalDaysBlocks.Count;
                                var normalBlockWidth = normalBlockCount > 0 ? 100.0 / normalBlockCount : 100.0;
                            }
                            @for (int i = 0; i < shift.NormalDaysBlocks.Count; i++)
                            {
                                var block = shift.NormalDaysBlocks[i];
                                var left = i * normalBlockWidth;
                                var blockClass = block.Type == "Work" ? "time-block-work" : "time-block-deduction";
                                var timeRange = $"{block.Start:hh\\:mm}-{block.End:hh\\:mm}";
                                
                                <div class="time-block @blockClass" 
                                        style="left: @left.ToString("F2")%; width: @normalBlockWidth.ToString("F2")%;"
                                        data-time="@timeRange" 
                                        data-duration="@block.DurationMinutes" 
                                        data-type="@block.Name">
                                    <div class="time-block-label">@block.Name</div>
                                    <div class="time-block-duration">@block.DurationMinutes min</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
                <div class="day-section">
                    <div class="day-label">
                        <span class="day-name">Friday</span>
                        <span class="day-subtitle">+ Prayer</span>
                        <span class="capacity-badge-inline">@shift.FridayWorkMinutes min</span>
                    </div>
                    <div class="timeline-container">
                        <div class="timeline-track">
                            @{
                                var fridayBlockCount = shift.FridayBlocks.Count;
                                var fridayBlockWidth = fridayBlockCount > 0 ? 100.0 / fridayBlockCount : 100.0;
                            }
                            @for (int i = 0; i < shift.FridayBlocks.Count; i++)
                            {
                                var block = shift.FridayBlocks[i];
                                var left = i * fridayBlockWidth;
                                var blockClass = block.Type == "Work" ? "time-block-work" : "time-block-deduction";
                                var timeRange = $"{block.Start:hh\\:mm}-{block.End:hh\\:mm}";
                                
                                <div class="time-block @blockClass" 
                                        style="left: @left.ToString("F2")%; width: @fridayBlockWidth.ToString("F2")%;"
                                        data-time="@timeRange" 
                                        data-duration="@block.DurationMinutes" 
                                        data-type="@block.Name">
                                    <div class="time-block-label">@block.Name</div>
                                    <div class="time-block-duration">@block.DurationMinutes min</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
    @if (shiftsWithoutFriday.Count > 0)
    {
        <div class="shifts-row">
            @foreach(var shift in shiftsWithoutFriday)
            {
                <div class="shift-card @shift.ClassName shift-half">
                    <div class="shift-header">
                        <div class="shift-icon">
                            <i class="@shift.Icon"></i>
                        </div>
                        <div class="shift-info">
                            <h5>@shift.Title</h5>
                            <div class="time-range">@shift.StartTime.ToString(@"hh\:mm") - @shift.EndTime.ToString(@"hh\:mm")</div>
                        </div>
                    </div>
                    
                    <div class="timeline-grid one-column-full">
                        <div class="day-section">
                            <div class="day-label">
                                <span class="day-name">Normal Days</span>
                                <span class="day-subtitle">Mon - Thu</span>
                                <span class="capacity-badge-inline">@shift.NormalWorkMinutes min</span>
                            </div>
                            <div class="timeline-container">
                                <div class="timeline-track">
                                    @{
                                        var normalBlockCount = shift.NormalDaysBlocks.Count;
                                        var normalBlockWidth = normalBlockCount > 0 ? 100.0 / normalBlockCount : 100.0;
                                    }
                                    @for (int i = 0; i < shift.NormalDaysBlocks.Count; i++)
                                    {
                                        var block = shift.NormalDaysBlocks[i];
                                        var left = i * normalBlockWidth;
                                        var blockClass = block.Type == "Work" ? "time-block-work" : "time-block-deduction";
                                        var timeRange = $"{block.Start:hh\\:mm}-{block.End:hh\\:mm}";
                                        
                                        <div class="time-block @blockClass" 
                                                style="left: @left.ToString("F2")%; width: @normalBlockWidth.ToString("F2")%;"
                                                data-time="@timeRange" 
                                                data-duration="@block.DurationMinutes" 
                                                data-type="@block.Name">
                                            <div class="time-block-label">@block.Name</div>
                                            <div class="time-block-duration">@block.DurationMinutes min</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @* Legend *@
    <div class="card shadow-sm" style="border: none; border-radius: 16px; padding: 20px;">
        <h6 class="mb-3" style="color: #1a202c; font-weight: 600; font-size: 14px;">Legend</h6>
        <div class="legend">
            @foreach(var legendItem in new[] { 
                new { Color = "#6366f1", Label = "NonShift Work" }, 
                new { Color = "#8b5cf6", Label = "Shift 1 Work" }, 
                new { Color = "#06b6d4", Label = "Shift 2 Work" }, 
                new { Color = "#10b981", Label = "Shift 3 Work" }, 
                new { Color = "#ef4444", Label = "Time Deduction" } 
            })
            {
                <div class="legend-item">
                    <div class="legend-color" style="background: @legendItem.Color;"></div>
                    <span>@legendItem.Label</span>
                </div>
            }
        </div>
    </div>
</div>

<style>
    body { background: #f5f7fa; padding: 20px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
    .shift-card { background: white; border-radius: 16px; padding: 24px; margin-bottom: 20px; box-shadow: 0 1px 3px rgba(0,0,0,0.06); transition: all 0.3s ease; }
    .shift-card:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
    .shifts-row { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px; }
    .shift-half { margin-bottom: 0; }
    .shift-header { display: flex; align-items: center; margin-bottom: 24px; padding-bottom: 20px; border-bottom: 1px solid #e2e8f0; }
    .shift-icon { width: 44px; height: 44px; border-radius: 12px; display: flex; align-items: center; justify-content: center; font-size: 18px; color: white; margin-right: 14px; }
    .shift-info h5 { margin: 0; font-size: 16px; font-weight: 600; color: #1a202c; }
    .shift-info .time-range { font-size: 13px; color: #718096; margin-top: 2px; }
    .timeline-grid { display: grid; gap: 20px; }
    .timeline-grid.two-columns { grid-template-columns: 1fr 1fr; }
    .day-section { min-width: 0; }
    .day-label { display: flex; align-items: center; gap: 8px; margin-bottom: 10px; }
    .day-name { font-size: 14px; font-weight: 600; color: #1a202c; }
    .day-subtitle { font-size: 11px; color: #94a3b8; }
    .capacity-badge-inline { margin-left: auto; padding: 4px 10px; border-radius: 20px; font-size: 11px; font-weight: 600; color: white; }
    .timeline-container { position: relative; height: 56px; background: #f7fafc; border-radius: 10px; overflow: hidden; border: 1px solid #e2e8f0; }
    .timeline-track { position: relative; height: 100%; display: flex; }
    .time-block { position: absolute; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; font-size: 11px; font-weight: 600; color: white; transition: all 0.2s; cursor: pointer; border-right: 1px solid rgba(255,255,255,0.2); }
    .time-block:hover { filter: brightness(1.08); z-index: 10; transform: translateY(-2px); }
    .time-block-label { font-size: 11px; font-weight: 600; margin-bottom: 2px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 90%; }
    .time-block-duration { font-size: 10px; opacity: 0.9; }
    .nonshift .time-block-work { background: #6366f1; }
    .shift1 .time-block-work { background: #8b5cf6; }
    .shift2 .time-block-work { background: #06b6d4; }
    .shift3 .time-block-work { background: #10b981; }
    .time-block-deduction { background: #ef4444; }
    .nonshift .shift-icon, .nonshift .capacity-badge-inline { background: #6366f1; }
    .shift1 .shift-icon, .shift1 .capacity-badge-inline { background: #8b5cf6; }
    .shift2 .shift-icon, .shift2 .capacity-badge-inline { background: #06b6d4; }
    .shift3 .shift-icon, .shift3 .capacity-badge-inline { background: #10b981; }
    .legend { display: flex; gap: 24px; align-items: center; flex-wrap: wrap; }
    .legend-item { display: flex; align-items: center; gap: 8px; font-size: 13px; color: #475569; }
    .legend-color { width: 32px; height: 20px; border-radius: 6px; }
    .tooltip-custom { position: absolute; background: rgba(15, 23, 42, 0.95); color: white; padding: 10px 14px; border-radius: 8px; font-size: 12px; pointer-events: none; z-index: 1000; white-space: nowrap; box-shadow: 0 4px 12px rgba(0,0,0,0.3); }
    .tooltip-custom .tooltip-time { font-weight: 600; margin-bottom: 2px; }
    .tooltip-custom .tooltip-duration { opacity: 0.8; font-size: 11px; }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const timeBlocks = document.querySelectorAll('.time-block');
        let tooltip = null;

        function updateTooltipPosition(e) {
            if (tooltip) {
                tooltip.style.left = (e.pageX + 12) + 'px';
                tooltip.style.top = (e.pageY - 40) + 'px';
            }
        }

        timeBlocks.forEach(block => {
            block.addEventListener('mouseenter', (e) => {
                const { time, duration, type } = e.target.closest('.time-block').dataset;
                tooltip = document.createElement('div');
                tooltip.className = 'tooltip-custom';
                tooltip.innerHTML = `<div class="tooltip-time">${type}: ${time}</div><div class="tooltip-duration">Duration: ${duration} minutes</div>`;
                document.body.appendChild(tooltip);
                updateTooltipPosition(e);
            });

            block.addEventListener('mousemove', updateTooltipPosition);
            
            block.addEventListener('mouseleave', () => {
                if (tooltip) {
                    tooltip.remove();
                    tooltip = null;
                }
            });
        });
    });
</script>